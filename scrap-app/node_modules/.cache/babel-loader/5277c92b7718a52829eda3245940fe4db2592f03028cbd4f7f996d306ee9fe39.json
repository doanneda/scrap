{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const {\n    userId\n  } = useParams(); // Get userId directly from the route parameters\n  const [scrapPages, setScrapPages] = useState([]);\n  const [error, setError] = useState('');\n  const loggedInUserId = localStorage.getItem('userId'); // Replace with your auth logic\n\n  useEffect(() => {\n    const fetchUserPages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/profile/users/${userId}`);\n        setScrapPages(res.data.scrapPages); // Store the scrapbook pages\n      } catch (err) {\n        console.error('Error fetching scrapbook pages:', err);\n        setError('Failed to load scrapbook pages.');\n      }\n    };\n    fetchUserPages();\n  }, [userId]);\n  const handleEdit = async pageId => {\n    const newDescription = prompt('Enter new description:');\n    if (!newDescription) return;\n    try {\n      const res = await axios.put(`http://localhost:4000/profile/users/${userId}/pages/${pageId}`, {\n        description: newDescription\n      });\n      setScrapPages(prev => prev.map(page => page._id === pageId ? {\n        ...page,\n        description: res.data.page.description\n      } : page));\n    } catch (err) {\n      console.error('Error updating page:', err);\n      setError('Failed to update the page.');\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  if (!scrapPages.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"No scrapbook pages found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User's Scrapbook Pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrapbook-grid\",\n      children: scrapPages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrapbook-item\",\n        style: {\n          '--scrapbook-bg': page.color || '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: page.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), loggedInUserId === userId && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(page._id),\n          style: {\n            marginTop: '10px',\n            padding: '5px 10px',\n            backgroundColor: '#007BFF',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, page._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"k8fYSNDX1IxAyvokdrPvHds59js=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Profile","_s","userId","scrapPages","setScrapPages","error","setError","loggedInUserId","localStorage","getItem","fetchUserPages","res","get","data","err","console","handleEdit","pageId","newDescription","prompt","put","description","prev","map","page","_id","style","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","marginTop","padding","backgroundColor","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\n\nexport default function Profile() {\n    const { userId } = useParams(); // Get userId directly from the route parameters\n    const [scrapPages, setScrapPages] = useState([]);\n    const [error, setError] = useState('');\n    const loggedInUserId = localStorage.getItem('userId'); // Replace with your auth logic\n\n    useEffect(() => {\n        const fetchUserPages = async () => {\n            try {\n                const res = await axios.get(`http://localhost:4000/profile/users/${userId}`);\n                setScrapPages(res.data.scrapPages); // Store the scrapbook pages\n            } catch (err) {\n                console.error('Error fetching scrapbook pages:', err);\n                setError('Failed to load scrapbook pages.');\n            }\n        };\n\n        fetchUserPages();\n    }, [userId]);\n\n    const handleEdit = async (pageId) => {\n        const newDescription = prompt('Enter new description:');\n        if (!newDescription) return;\n\n        try {\n            const res = await axios.put(`http://localhost:4000/profile/users/${userId}/pages/${pageId}`, {\n                description: newDescription,\n            });\n            setScrapPages((prev) =>\n                prev.map((page) =>\n                    page._id === pageId ? { ...page, description: res.data.page.description } : page\n                )\n            );\n        } catch (err) {\n            console.error('Error updating page:', err);\n            setError('Failed to update the page.');\n        }\n    };\n\n    if (error) {\n        return <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>;\n    }\n\n    if (!scrapPages.length) {\n        return <div style={{ textAlign: 'center' }}>No scrapbook pages found.</div>;\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <h1>User's Scrapbook Pages</h1>\n            <div className=\"scrapbook-grid\">\n                {scrapPages.map((page) => (\n                    <div\n                        key={page._id}\n                        className=\"scrapbook-item\"\n                        style={{ '--scrapbook-bg': page.color || '#f9f9f9' }}\n                    >\n                        <p>{page.description}</p>\n\n                        {/* Edit Button (Only for Logged-In User) */}\n                        {loggedInUserId === userId && (\n                            <button\n                                onClick={() => handleEdit(page._id)}\n                                style={{\n                                    marginTop: '10px',\n                                    padding: '5px 10px',\n                                    backgroundColor: '#007BFF',\n                                    color: '#fff',\n                                    border: 'none',\n                                    borderRadius: '5px',\n                                    cursor: 'pointer',\n                                }}\n                            >\n                                Edit\n                            </button>\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}