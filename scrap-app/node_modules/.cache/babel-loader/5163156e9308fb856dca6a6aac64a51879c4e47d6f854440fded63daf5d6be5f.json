{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePage() {\n  _s();\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n  const [error, setError] = useState(''); // Error message for validation feedback\n  const name = \"TEST\";\n  const handleNumImagesChange = event => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n    setError(''); // Clear error when images changed\n  };\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n    setError('');\n  };\n\n  // Removing images\n  const handleRemove = index => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter(image => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n\n    // Upload the images to MongoDB\n    try {\n      const scrapData = {\n        name,\n        images,\n        description\n        // color,\n        // stickers\n      };\n      const res = await axios.post(`${process.env.EXPO_PUBLIC_SERVER_URL}/scrap-pages/post`, scrapData);\n      console.log(\"got to axios\");\n      if (res.data.error) {\n        console.error(res.data.error);\n      } else {\n        const userId = res.data._id;\n        console.log(\"got to userID\");\n        await Storage({\n          key: 'userId',\n          value: userId,\n          saveKey: true\n        });\n        // navigation.navigate('Home');\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: numImages,\n          onChange: handleNumImagesChange,\n          children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n        gap: '10px'\n      },\n      children: Array.from({\n        length: numImages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          textAlign: 'center'\n        },\n        children: images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(images[index]),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(index),\n            style: {\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              borderRadius: '50%',\n              width: '20px',\n              height: '20px',\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100px',\n              height: '100px',\n              border: '1px dashed gray',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'pointer'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => handleFileChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter a description here...\",\n        style: {\n          width: '100%',\n          height: '80px',\n          padding: '10px',\n          fontSize: '14px',\n          border: '1px solid gray',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        color: 'red',\n        fontSize: '14px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: 'blue',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this)\n\n  // <Link to=\"login\">\n  //     <button>Login</button>\n  // </Link>\n  ;\n}\n_s(CreatePage, \"Z7iK1PcT+GZS2NS72sllTr16Uss=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["Link","React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePage","_s","numImages","setNumImages","images","setImages","description","setDescription","error","setError","name","handleNumImagesChange","event","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","updatedImages","files","handleRemove","handleUpload","filter","image","length","scrapData","res","post","process","env","EXPO_PUBLIC_SERVER_URL","console","log","data","userId","_id","Storage","key","saveKey","err","message","alert","children","onChange","map","num","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","Math","min","gap","from","_","position","textAlign","src","URL","createObjectURL","alt","width","height","objectFit","onClick","top","right","backgroundColor","color","border","borderRadius","cursor","alignItems","justifyContent","type","e","marginTop","placeholder","padding","fontSize","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function CreatePage() {\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n  const [error, setError] = useState(''); // Error message for validation feedback\n  const name = \"TEST\";\n\n  const handleNumImagesChange = (event) => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n    setError(''); // Clear error when images changed\n  };\n\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n    setError(''); \n  };\n\n  // Removing images\n  const handleRemove = (index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter((image) => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n\n    // Upload the images to MongoDB\n    try {\n      const scrapData = {\n        name,\n        images,\n        description,\n        // color,\n        // stickers\n      };\n      const res = await axios.post(`${process.env.EXPO_PUBLIC_SERVER_URL}/scrap-pages/post`, scrapData);\n      console.log(\"got to axios\")\n      if (res.data.error) {\n        console.error(res.data.error);\n      } else {\n        const userId = res.data._id;\n        console.log(\"got to userID\")\n        await Storage({ key: 'userId', value: userId, saveKey: true });\n        // navigation.navigate('Home');\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n\n  return (\n    <div>\n      {/* Dropdown for Number of Images */}\n      <div>\n        <label>\n          Select number of images:\n          <select\n            value={numImages}\n            onChange={handleNumImagesChange}\n          >\n            {[1, 2, 3, 4].map((num) => (\n              <option key={num} value={num}>\n                {num}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {/* Dynamic Grid */}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px',\n        }}\n      >\n        {Array.from({ length: numImages }).map((_, index) => (\n          <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n            {images[index] ? (\n              <>\n                <img\n                  src={URL.createObjectURL(images[index])}\n                  alt=\"Preview\"\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                  }}\n                />\n                <button\n                  onClick={() => handleRemove(index)}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'red',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    width: '20px',\n                    height: '20px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  &times;\n                </button>\n              </>\n            ) : (\n              <label>\n                <div\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    border: '1px dashed gray',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    cursor: 'pointer',\n                  }}\n                >\n                  +\n                </div>\n                <input\n                  type=\"file\"\n                  style={{ display: 'none' }}\n                  onChange={(e) => handleFileChange(index, e)}\n                />\n              </label>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Text Input Section */}\n      <div style={{ marginTop: '20px' }}>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Enter a description here...\"\n          style={{\n            width: '100%',\n            height: '80px',\n            padding: '10px',\n            fontSize: '14px',\n            border: '1px solid gray',\n            borderRadius: '5px',\n          }}\n        ></textarea>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div\n          style={{\n            marginTop: '10px',\n            color: 'red',\n            fontSize: '14px',\n          }}\n        >\n          {error}\n        </div>\n      )}\n\n      {/* Upload Button */}\n      <button\n        onClick={handleUpload}\n        style={{\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: 'blue',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Upload\n      </button>\n    </div>\n    \n\n    // <Link to=\"login\">\n    //     <button>Login</button>\n    // </Link>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}