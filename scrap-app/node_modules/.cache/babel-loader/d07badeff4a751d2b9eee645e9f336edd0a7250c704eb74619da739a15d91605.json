{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s2 = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n\n  const handleNumImagesChange = event => {\n    _s();\n    const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n    const [images, setImages] = useState([]); // Store the uploaded images\n    const [description, setDescription] = useState(''); // Store the description\n    const [error, setError] = useState(''); // Error message for validation feedback\n\n    const handleNumImagesChange = event => {\n      const newNumImages = parseInt(event.target.value, 10);\n      setNumImages(newNumImages);\n      setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n      setError(''); // Clear error when the number of images is changed\n    };\n    const handleFileChange = (index, event) => {\n      const updatedImages = [...images];\n      updatedImages[index] = event.target.files[0];\n      setImages(updatedImages);\n      setError(''); // Clear error when an image is uploaded\n    };\n    const handleRemove = index => {\n      const updatedImages = [...images];\n      updatedImages[index] = null; // Clear the specific image slot\n      setImages(updatedImages);\n    };\n    const handleUpload = () => {\n      // Check if all required images are uploaded\n      if (images.filter(image => image !== null).length !== numImages) {\n        setError(`Please upload all ${numImages} images before proceeding.`);\n        return;\n      }\n\n      // If all images are uploaded, proceed with upload logic\n      console.log('Selected Images:', images);\n      console.log('Description:', description);\n\n      // Reset state for demonstration purposes\n      setError(''); // Clear error\n      setImages(Array(numImages).fill(null));\n      setDescription('');\n      alert('Upload successful!');\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: numImages,\n            onChange: handleNumImagesChange,\n            style: {\n              marginLeft: '10px',\n              padding: '5px',\n              fontSize: '14px',\n              borderRadius: '5px'\n            },\n            children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: num,\n              children: num\n            }, num, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px'\n        },\n        children: Array.from({\n          length: numImages\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            textAlign: 'center'\n          },\n          children: images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(images[index]),\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemove(index),\n              style: {\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                borderRadius: '50%',\n                width: '20px',\n                height: '20px',\n                cursor: 'pointer'\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100px',\n                height: '100px',\n                border: '1px dashed gray',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                cursor: 'pointer'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              style: {\n                display: 'none'\n              },\n              onChange: e => handleFileChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter a description here...\",\n          style: {\n            width: '100%',\n            height: '80px',\n            padding: '10px',\n            fontSize: '14px',\n            border: '1px solid gray',\n            borderRadius: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          color: 'red',\n          fontSize: '14px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: 'blue',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n\n    // <Link to=\"login\">\n    //     <button>Login</button>\n    // </Link>\n    ;\n  };\n  _s(handleNumImagesChange, \"Z7iK1PcT+GZS2NS72sllTr16Uss=\");\n}\n_s2(CreatePage, \"U1zU1sZ063Nb05yEKJqH1TuYd6E=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["Link","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePage","_s2","_s","$RefreshSig$","numImages","setNumImages","images","setImages","description","setDescription","handleNumImagesChange","event","error","setError","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","updatedImages","files","handleRemove","handleUpload","filter","image","length","console","log","alert","children","style","marginBottom","onChange","marginLeft","padding","fontSize","borderRadius","map","num","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","Math","min","gap","from","_","position","textAlign","src","URL","createObjectURL","alt","width","height","objectFit","onClick","top","right","backgroundColor","color","border","cursor","alignItems","justifyContent","type","e","marginTop","placeholder","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nexport default function CreatePage() {\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n\n  const handleNumImagesChange = (event) => {\n    const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n    const [images, setImages] = useState([]); // Store the uploaded images\n    const [description, setDescription] = useState(''); // Store the description\n    const [error, setError] = useState(''); // Error message for validation feedback\n  \n    const handleNumImagesChange = (event) => {\n      const newNumImages = parseInt(event.target.value, 10);\n      setNumImages(newNumImages);\n      setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n      setError(''); // Clear error when the number of images is changed\n    };\n  \n    const handleFileChange = (index, event) => {\n      const updatedImages = [...images];\n      updatedImages[index] = event.target.files[0];\n      setImages(updatedImages);\n      setError(''); // Clear error when an image is uploaded\n    };\n  \n    const handleRemove = (index) => {\n      const updatedImages = [...images];\n      updatedImages[index] = null; // Clear the specific image slot\n      setImages(updatedImages);\n    };\n  \n    const handleUpload = () => {\n      // Check if all required images are uploaded\n      if (images.filter((image) => image !== null).length !== numImages) {\n        setError(`Please upload all ${numImages} images before proceeding.`);\n        return;\n      }\n  \n      // If all images are uploaded, proceed with upload logic\n      console.log('Selected Images:', images);\n      console.log('Description:', description);\n  \n      // Reset state for demonstration purposes\n      setError(''); // Clear error\n      setImages(Array(numImages).fill(null));\n      setDescription('');\n      alert('Upload successful!');\n    };\n  \n    return (\n      <div>\n        {/* Dropdown for Number of Images */}\n        <div style={{ marginBottom: '20px' }}>\n          <label>\n            Select number of images:\n            <select\n              value={numImages}\n              onChange={handleNumImagesChange}\n              style={{\n                marginLeft: '10px',\n                padding: '5px',\n                fontSize: '14px',\n                borderRadius: '5px',\n              }}\n            >\n              {[1, 2, 3, 4].map((num) => (\n                <option key={num} value={num}>\n                  {num}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n  \n        {/* Dynamic Grid */}\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n            gap: '10px',\n          }}\n        >\n          {Array.from({ length: numImages }).map((_, index) => (\n            <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n              {images[index] ? (\n                <>\n                  <img\n                    src={URL.createObjectURL(images[index])}\n                    alt=\"Preview\"\n                    style={{\n                      width: '100px',\n                      height: '100px',\n                      objectFit: 'cover',\n                    }}\n                  />\n                  <button\n                    onClick={() => handleRemove(index)}\n                    style={{\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      backgroundColor: 'red',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '50%',\n                      width: '20px',\n                      height: '20px',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    &times;\n                  </button>\n                </>\n              ) : (\n                <label>\n                  <div\n                    style={{\n                      width: '100px',\n                      height: '100px',\n                      border: '1px dashed gray',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    +\n                  </div>\n                  <input\n                    type=\"file\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleFileChange(index, e)}\n                  />\n                </label>\n              )}\n            </div>\n          ))}\n        </div>\n  \n        {/* Text Input Section */}\n        <div style={{ marginTop: '20px' }}>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Enter a description here...\"\n            style={{\n              width: '100%',\n              height: '80px',\n              padding: '10px',\n              fontSize: '14px',\n              border: '1px solid gray',\n              borderRadius: '5px',\n            }}\n          ></textarea>\n        </div>\n  \n        {/* Error Message */}\n        {error && (\n          <div\n            style={{\n              marginTop: '10px',\n              color: 'red',\n              fontSize: '14px',\n            }}\n          >\n            {error}\n          </div>\n        )}\n  \n        {/* Upload Button */}\n        <button\n          onClick={handleUpload}\n          style={{\n            marginTop: '20px',\n            padding: '10px 20px',\n            backgroundColor: 'blue',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n          }}\n        >\n          Upload\n        </button>\n      </div>\n    \n\n    // <Link to=\"login\">\n    //     <button>Login</button>\n    // </Link>\n  );\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}