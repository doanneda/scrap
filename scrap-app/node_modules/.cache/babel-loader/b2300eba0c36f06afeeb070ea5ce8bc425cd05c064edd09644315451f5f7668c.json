{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/DraggableImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef } from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DraggableImage = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  id,\n  position,\n  imageSource,\n  size = {\n    width: 100,\n    height: 100\n  }\n}, ref) => {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform\n  } = useDraggable({\n    id\n  });\n  const style = {\n    transform: `translate(${position.x + ((transform === null || transform === void 0 ? void 0 : transform.x) || 0)}px, ${position.y + ((transform === null || transform === void 0 ? void 0 : transform.y) || 0)}px)`,\n    width: `${size.width}px`,\n    height: `${size.height}px`,\n    cursor: 'pointer',\n    position: 'absolute',\n    // Ensure proper stacking and positioning\n    borderRadius: '15px' // Rounded corners\n    // border: '5px solid', // Gradient border\n    // backgroundOrigin: 'border-box',\n    // backgroundClip: 'padding-box, border-box',\n    // boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06)', // Soft shadow\n  };\n\n  // Determine the image source (URL or base64-encoded file)\n  const getImageSource = () => {\n    if (typeof imageSource === 'string') {\n      return imageSource; // URL or placeholder\n    }\n    if (imageSource instanceof File) {\n      return URL.createObjectURL(imageSource); // Create URL for the file\n    }\n    return 'https://via.placeholder.com/100'; // Fallback\n  };\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    ref: node => {\n      setNodeRef(node);\n      if (ref) ref.current = node;\n    },\n    src: getImageSource(),\n    alt: \"Draggable\",\n    style: style,\n    ...listeners,\n    ...attributes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}, \"KToSDLllTTEzOm4MO+FGxu29k4s=\", false, function () {\n  return [useDraggable];\n})), \"KToSDLllTTEzOm4MO+FGxu29k4s=\", false, function () {\n  return [useDraggable];\n});\n_c2 = DraggableImage;\nexport default DraggableImage;\nvar _c, _c2;\n$RefreshReg$(_c, \"DraggableImage$forwardRef\");\n$RefreshReg$(_c2, \"DraggableImage\");","map":{"version":3,"names":["React","forwardRef","useDraggable","jsxDEV","_jsxDEV","DraggableImage","_s","_c","id","position","imageSource","size","width","height","ref","attributes","listeners","setNodeRef","transform","style","x","y","cursor","borderRadius","getImageSource","File","URL","createObjectURL","node","current","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/DraggableImage.jsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useDraggable } from '@dnd-kit/core';\n\nconst DraggableImage = forwardRef(\n  ({ id, position, imageSource, size = { width: 100, height: 100 } }, ref) => {\n    const { attributes, listeners, setNodeRef, transform } = useDraggable({\n      id,\n    });\n\n    const style = {\n      transform: `translate(${position.x + (transform?.x || 0)}px, ${position.y + (transform?.y || 0)}px)`,\n      width: `${size.width}px`,\n      height: `${size.height}px`,\n      cursor: 'pointer',\n      position: 'absolute', // Ensure proper stacking and positioning\n      borderRadius: '15px', // Rounded corners\n      // border: '5px solid', // Gradient border\n      // backgroundOrigin: 'border-box',\n      // backgroundClip: 'padding-box, border-box',\n      // boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06)', // Soft shadow\n    };\n\n    // Determine the image source (URL or base64-encoded file)\n    const getImageSource = () => {\n      if (typeof imageSource === 'string') {\n        return imageSource; // URL or placeholder\n      }\n      if (imageSource instanceof File) {\n        return URL.createObjectURL(imageSource); // Create URL for the file\n      }\n      return 'https://via.placeholder.com/100'; // Fallback\n    };\n\n    return (\n      <img\n        ref={(node) => {\n          setNodeRef(node);\n          if (ref) ref.current = node;\n        }}\n        src={getImageSource()}\n        alt=\"Draggable\"\n        style={style}\n        {...listeners}\n        {...attributes}\n      />\n    );\n  }\n);\n\nexport default DraggableImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,gBAAAC,EAAA,cAAGL,UAAU,CAAAM,EAAA,GAAAD,EAAA,CAC/B,CAAC;EAAEE,EAAE;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,IAAI,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI;AAAE,CAAC,EAAEC,GAAG,KAAK;EAAAR,EAAA;EAC1E,MAAM;IAAES,UAAU;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGhB,YAAY,CAAC;IACpEM;EACF,CAAC,CAAC;EAEF,MAAMW,KAAK,GAAG;IACZD,SAAS,EAAE,aAAaT,QAAQ,CAACW,CAAC,IAAI,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,CAAC,KAAI,CAAC,CAAC,OAAOX,QAAQ,CAACY,CAAC,IAAI,CAAAH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,CAAC,KAAI,CAAC,CAAC,KAAK;IACpGT,KAAK,EAAE,GAAGD,IAAI,CAACC,KAAK,IAAI;IACxBC,MAAM,EAAE,GAAGF,IAAI,CAACE,MAAM,IAAI;IAC1BS,MAAM,EAAE,SAAS;IACjBb,QAAQ,EAAE,UAAU;IAAE;IACtBc,YAAY,EAAE,MAAM,CAAE;IACtB;IACA;IACA;IACA;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,OAAOd,WAAW,KAAK,QAAQ,EAAE;MACnC,OAAOA,WAAW,CAAC,CAAC;IACtB;IACA,IAAIA,WAAW,YAAYe,IAAI,EAAE;MAC/B,OAAOC,GAAG,CAACC,eAAe,CAACjB,WAAW,CAAC,CAAC,CAAC;IAC3C;IACA,OAAO,iCAAiC,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEN,OAAA;IACEU,GAAG,EAAGc,IAAI,IAAK;MACbX,UAAU,CAACW,IAAI,CAAC;MAChB,IAAId,GAAG,EAAEA,GAAG,CAACe,OAAO,GAAGD,IAAI;IAC7B,CAAE;IACFE,GAAG,EAAEN,cAAc,CAAC,CAAE;IACtBO,GAAG,EAAC,WAAW;IACfZ,KAAK,EAAEA,KAAM;IAAA,GACTH,SAAS;IAAA,GACTD;EAAU;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEN,CAAC;EAAA,QAzC0DjC,YAAY;AAAA,EA0CzE,CAAC;EAAA,QA1C4DA,YAAY;AAAA,EA0CxE;AAACkC,GAAA,GA5CI/B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAE,EAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAA9B,EAAA;AAAA8B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}