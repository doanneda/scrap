{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// export default function Feed() {\n//     const [scrapData, setScrapData] = useState([]);\n//     const [error, setError] = useState('');\n\n//     useEffect(() => {\n//         const fetchScrapData = async () => {\n//           try {\n//             const res = await axios.get('http://localhost:4000/scrap-pages'); // Update the endpoint if necessary\n//             setScrapData(res.data); // Assuming the response contains an array of scrapbook data\n//           } catch (err) {\n//             console.error('Error fetching scrapbook data:', err);\n//             setError('Failed to load scrapbook data.');\n//           }\n//         };\n\n//         fetchScrapData();\n//       }, []);\n\n//       return (\n//     <div style={{ padding: '20px' }}>\n//       <h1>Scrapbook Pages</h1>\n\n//       {/* Error Message */}\n//       {error && (\n//         <div style={{ color: 'red', marginBottom: '10px' }}>\n//           {error}\n//         </div>\n//       )}\n\n//       {/* Render Scrapbook Pages */}\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '20px' }}>\n//         {scrapData.map((page, index) => (\n//           <div\n//             key={index}\n//             style={{\n//               border: '1px solid #ccc',\n//               borderRadius: '10px',\n//               padding: '10px',\n//               backgroundColor: page.color || '#f9f9f9',\n//             }}\n//           >\n//             <h3>{page.name}</h3>\n//             <p>{page.description}</p>\n\n//             {/* Render Images */}\n//             {page.binaryImages && page.binaryImages.length > 0 ? (\n//               <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))', gap: '10px' }}>\n//                 {page.binaryImages.map((image, index) => {\n//                     const bufferToBase64 = (bufferObj) => {\n//                         const byteArray = new Uint8Array(bufferObj.data); // Convert to Uint8Array\n//                         const base64String = new TextDecoder().decode(byteArray); // Decode to Base64 string\n//                         return base64String; // The result should include 'data:image/...'\n//                       };\n\n//                     const imageSrc = bufferToBase64(image);\n\n//                     return (\n//                         <img\n//                         key={index}\n//                         src={imageSrc}\n//                         alt={`Scrapbook ${index}`}\n//                         style={{ width: '150px', height: '150px', objectFit: 'cover' }}\n//                         />\n//                     );\n//                 })}\n//               </div>\n//             ) : (\n//               <p>No images available</p>\n//             )}\n\n//             {/* Stickers Section */}\n//             {page.stickers && page.stickers.length > 0 && (\n//               <div>\n//                 <h4>Stickers:</h4>\n//                 <ul>\n//                   {page.stickers.map((sticker, stickerIndex) => (\n//                     <li key={stickerIndex}>\n//                       Type: {sticker.stickerType}, Positions:{' '}\n//                       {sticker.position.map((pos, posIndex) => (\n//                         <span key={posIndex}>\n//                           ({pos.x}, {pos.y}){' '}\n//                         </span>\n//                       ))}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n\n// return (\n// <div className=\"feed\" alt=\"brown thread\">\n//     <img src={threadImage} />\n//     <div>\n//         test\n//     </div>\n\n//     <Link to=\"login\">\n//         <button>Login</button>\n//     </Link>\n// </div>\n// )\n// }","map":{"version":3,"names":[],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Feed.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n\n// export default function Feed() {\n//     const [scrapData, setScrapData] = useState([]);\n//     const [error, setError] = useState('');\n\n//     useEffect(() => {\n//         const fetchScrapData = async () => {\n//           try {\n//             const res = await axios.get('http://localhost:4000/scrap-pages'); // Update the endpoint if necessary\n//             setScrapData(res.data); // Assuming the response contains an array of scrapbook data\n//           } catch (err) {\n//             console.error('Error fetching scrapbook data:', err);\n//             setError('Failed to load scrapbook data.');\n//           }\n//         };\n    \n//         fetchScrapData();\n//       }, []);\n\n//       return (\n//     <div style={{ padding: '20px' }}>\n//       <h1>Scrapbook Pages</h1>\n\n//       {/* Error Message */}\n//       {error && (\n//         <div style={{ color: 'red', marginBottom: '10px' }}>\n//           {error}\n//         </div>\n//       )}\n\n//       {/* Render Scrapbook Pages */}\n//       <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '20px' }}>\n//         {scrapData.map((page, index) => (\n//           <div\n//             key={index}\n//             style={{\n//               border: '1px solid #ccc',\n//               borderRadius: '10px',\n//               padding: '10px',\n//               backgroundColor: page.color || '#f9f9f9',\n//             }}\n//           >\n//             <h3>{page.name}</h3>\n//             <p>{page.description}</p>\n\n//             {/* Render Images */}\n//             {page.binaryImages && page.binaryImages.length > 0 ? (\n//               <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))', gap: '10px' }}>\n//                 {page.binaryImages.map((image, index) => {\n//                     const bufferToBase64 = (bufferObj) => {\n//                         const byteArray = new Uint8Array(bufferObj.data); // Convert to Uint8Array\n//                         const base64String = new TextDecoder().decode(byteArray); // Decode to Base64 string\n//                         return base64String; // The result should include 'data:image/...'\n//                       };\n                      \n//                     const imageSrc = bufferToBase64(image);\n                      \n//                     return (\n//                         <img\n//                         key={index}\n//                         src={imageSrc}\n//                         alt={`Scrapbook ${index}`}\n//                         style={{ width: '150px', height: '150px', objectFit: 'cover' }}\n//                         />\n//                     );\n//                 })}\n//               </div>\n//             ) : (\n//               <p>No images available</p>\n//             )}\n\n//             {/* Stickers Section */}\n//             {page.stickers && page.stickers.length > 0 && (\n//               <div>\n//                 <h4>Stickers:</h4>\n//                 <ul>\n//                   {page.stickers.map((sticker, stickerIndex) => (\n//                     <li key={stickerIndex}>\n//                       Type: {sticker.stickerType}, Positions:{' '}\n//                       {sticker.position.map((pos, posIndex) => (\n//                         <span key={posIndex}>\n//                           ({pos.x}, {pos.y}){' '}\n//                         </span>\n//                       ))}\n//                     </li>\n//                   ))}\n//                 </ul>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n\n    // return (\n    // <div className=\"feed\" alt=\"brown thread\">\n    //     <img src={threadImage} />\n    //     <div>\n    //         test\n    //     </div>\n\n    //     <Link to=\"login\">\n    //         <button>Login</button>\n    //     </Link>\n    // </div>\n    // )\n// }\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}