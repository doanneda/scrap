{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const {\n    userId\n  } = useParams(); // Get userId directly from the route parameters\n  const [scrapPages, setScrapPages] = useState([]);\n  const [error, setError] = useState('');\n  // const loggedInUserId = localStorage.getItem('userId'); // Assuming you store logged-in user's ID in localStorage\n  // console.log(loggedInUserId)\n  const loggedInUserId = \"67445622633a507406142121\"; //make an edit where we find the current users ID\n\n  useEffect(() => {\n    const fetchUserPages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/profile/users/${userId}`);\n        setScrapPages(res.data.scrapPages); // Store the scrapbook pages\n      } catch (err) {\n        console.error('Error fetching scrapbook pages:', err);\n        setError('Failed to load scrapbook pages.');\n      }\n    };\n    fetchUserPages();\n  }, [userId]);\n  const handleEdit = async pageId => {\n    const newDescription = prompt('Enter new description:');\n    if (!newDescription) return;\n    try {\n      const res = await axios.put(`http://localhost:4000/profile/users/${userId}/pages/${pageId}`, {\n        description: newDescription\n      });\n      setScrapPages(prev => prev.map(page => page._id === pageId ? {\n        ...page,\n        description: res.data.page.description\n      } : page));\n    } catch (err) {\n      console.error('Error updating page:', err);\n      setError('Failed to update the page.');\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  if (!scrapPages.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"No scrapbook pages found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User's Scrapbook Pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrapbook-grid\",\n      children: scrapPages.map(page => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrapbook-item\",\n        style: {\n          '--scrapbook-bg': page.color || '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: page.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), loggedInUserId === userId && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(page._id),\n          style: {\n            marginTop: '10px',\n            padding: '5px 10px',\n            backgroundColor: '#007BFF',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), page.binaryImages && page.binaryImages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"images-grid\",\n          children: page.binaryImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: `Scrapbook ${index}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-images\",\n          children: \"No images available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), page.stickers && page.stickers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stickers-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Stickers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: page.stickers.map((sticker, stickerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Type: \", sticker.stickerType, \", Positions:\", ' ', sticker.position.map((pos, posIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"(\", pos.x, \", \", pos.y, \")\", ' ']\n              }, posIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 49\n              }, this))]\n            }, stickerIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-container\",\n          children: page.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"#\", tag, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, page._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"k8fYSNDX1IxAyvokdrPvHds59js=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Profile","_s","userId","scrapPages","setScrapPages","error","setError","loggedInUserId","fetchUserPages","res","get","data","err","console","handleEdit","pageId","newDescription","prompt","put","description","prev","map","page","_id","style","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","marginTop","padding","backgroundColor","border","borderRadius","cursor","binaryImages","image","index","src","alt","stickers","sticker","stickerIndex","stickerType","position","pos","posIndex","x","y","tags","tag","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Profile.css';\n\nexport default function Profile() {\n    const { userId } = useParams(); // Get userId directly from the route parameters\n    const [scrapPages, setScrapPages] = useState([]);\n    const [error, setError] = useState('');\n    // const loggedInUserId = localStorage.getItem('userId'); // Assuming you store logged-in user's ID in localStorage\n    // console.log(loggedInUserId)\n    const loggedInUserId = \"67445622633a507406142121\"; //make an edit where we find the current users ID\n\n    useEffect(() => {\n        const fetchUserPages = async () => {\n            try {\n                const res = await axios.get(`http://localhost:4000/profile/users/${userId}`);\n                setScrapPages(res.data.scrapPages); // Store the scrapbook pages\n            } catch (err) {\n                console.error('Error fetching scrapbook pages:', err);\n                setError('Failed to load scrapbook pages.');\n            }\n        };\n\n        fetchUserPages();\n    }, [userId]);\n\n    const handleEdit = async (pageId) => {\n        const newDescription = prompt('Enter new description:');\n        if (!newDescription) return;\n\n        try {\n            const res = await axios.put(`http://localhost:4000/profile/users/${userId}/pages/${pageId}`, {\n                description: newDescription,\n            });\n            setScrapPages((prev) =>\n                prev.map((page) =>\n                    page._id === pageId ? { ...page, description: res.data.page.description } : page\n                )\n            );\n        } catch (err) {\n            console.error('Error updating page:', err);\n            setError('Failed to update the page.');\n        }\n    };\n\n    if (error) {\n        return <div style={{ color: 'red', textAlign: 'center' }}>{error}</div>;\n    }\n\n    if (!scrapPages.length) {\n        return <div style={{ textAlign: 'center' }}>No scrapbook pages found.</div>;\n    }\n\n    return (\n        <div className=\"profile-container\">\n            <h1>User's Scrapbook Pages</h1>\n            <div className=\"scrapbook-grid\">\n                {scrapPages.map((page) => (\n                    <div\n                        key={page._id}\n                        className=\"scrapbook-item\"\n                        style={{ '--scrapbook-bg': page.color || '#f9f9f9' }}\n                    >\n                        <p>{page.description}</p>\n\n                        {/* Edit Button (Only for Logged-In User) */}\n                        {loggedInUserId === userId && (\n                            <button\n                                onClick={() => handleEdit(page._id)}\n                                style={{\n                                    marginTop: '10px',\n                                    padding: '5px 10px',\n                                    backgroundColor: '#007BFF',\n                                    color: '#fff',\n                                    border: 'none',\n                                    borderRadius: '5px',\n                                    cursor: 'pointer',\n                                }}\n                            >\n                                Edit\n                            </button>\n                        )}\n\n                        {/* Render Images */}\n                        {page.binaryImages && page.binaryImages.length > 0 ? (\n                            <div className=\"images-grid\">\n                                {page.binaryImages.map((image, index) => (\n                                    <img\n                                        key={index}\n                                        src={image}\n                                        alt={`Scrapbook ${index}`}\n                                    />\n                                ))}\n                            </div>\n                        ) : (\n                            <p className=\"no-images\">No images available</p>\n                        )}\n\n                        {/* Stickers Section */}\n                        {page.stickers && page.stickers.length > 0 && (\n                            <div className=\"stickers-section\">\n                                <h4>Stickers:</h4>\n                                <ul>\n                                    {page.stickers.map((sticker, stickerIndex) => (\n                                        <li key={stickerIndex}>\n                                            Type: {sticker.stickerType}, Positions:{' '}\n                                            {sticker.position.map((pos, posIndex) => (\n                                                <span key={posIndex}>\n                                                    ({pos.x}, {pos.y}){' '}\n                                                </span>\n                                            ))}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                        {/* Tags Section */}\n                        <div className=\"tags-container\">\n                            {page.tags.map((tag, index) => (\n                                <span key={index}>#{tag} </span>\n                            ))}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}