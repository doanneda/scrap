{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePage() {\n  _s();\n  const [numImages, setNumImages] = useState(1);\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const name = \"TEST3\";\n  const color = \"paleGreen\";\n  const stickers = [{\n    \"stickerType\": \"emoji\",\n    \"position\": [{\n      \"x\": 10,\n      \"y\": 20\n    }, {\n      \"x\": 30,\n      \"y\": 40\n    }]\n  }];\n  const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\n  const MAX_WIDTH = 800;\n  const MAX_HEIGHT = 800;\n  const handleNumImagesChange = event => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null));\n    setError('');\n  };\n  const handleFileChange = (index, event) => {\n    const file = event.target.files[0];\n    if (file && file.size > MAX_FILE_SIZE) {\n      alert('File is too large. Please upload a file smaller than 5MB.');\n      return;\n    }\n    const updatedImages = [...images];\n    updatedImages[index] = file;\n    setImages(updatedImages);\n    setError('');\n  };\n  const handleRemove = index => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n  const resizeImage = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.src = reader.result;\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          let width = img.width;\n          let height = img.height;\n          if (width > height) {\n            if (width > MAX_WIDTH) {\n              height *= MAX_WIDTH / width;\n              width = MAX_WIDTH;\n            }\n          } else {\n            if (height > MAX_HEIGHT) {\n              width *= MAX_HEIGHT / height;\n              height = MAX_HEIGHT;\n            }\n          }\n          canvas.width = width;\n          canvas.height = height;\n          ctx.drawImage(img, 0, 0, width, height);\n          resolve(canvas.toDataURL('image/jpeg')); // Base64 encoded image\n        };\n        img.onerror = reject;\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file); // Reads the file as base64\n    });\n  };\n\n  // const handleUpload = async () => {\n  //   // Check if all required images are uploaded\n  //   if (images.filter((image) => image !== null).length !== numImages) {\n  //     setError(`Please upload all ${numImages} images before proceeding.`);\n  //     return;\n  //   }\n\n  //   // Resize images and convert to Base64\n  //   const imagePromises = images.map((file) => resizeImage(file));\n\n  //   try {\n  //     const resizedBase64Images = await Promise.all(imagePromises);\n\n  //     // Send to server\n  //     const scrapData = {\n  //       name,\n  //       binaryImages: resizedBase64Images,\n  //       description,\n  //       color,\n  //       stickers\n  //     };\n\n  //     const res = await axios.post(`${process.env.REACT_APP_SERVER_URL}/scrap-pages/add-page`, scrapData);\n  //     console.log('Upload Successful', res.data);\n\n  //     // Reset state after successful upload\n  //     setError('');\n  //     setImages(Array(numImages).fill(null));\n  //     setDescription('');\n  //     alert('Upload successful!');\n  //   } catch (err) {\n  //     console.error('Upload error:', err.message);\n  //     setError('There was an error uploading the images.');\n  //   }\n  // };\n\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter(image => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n\n    // Resize images and convert to Base64\n    const imagePromises = images.map(file => resizeImage(file));\n    try {\n      const resizedBase64Images = await Promise.all(imagePromises);\n\n      // Retrieve user token from local storage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You must be logged in to upload a scrapbook page.');\n        return;\n      }\n\n      // Send to server\n      const scrapData = {\n        // name,\n        binaryImages: resizedBase64Images,\n        description,\n        color,\n        stickers\n      };\n      const res = await axios.post(`${process.env.REACT_APP_SERVER_URL}/scrap-pages/post`, scrapData, {\n        headers: {\n          'x-auth-token': token // Include the token in the request headers\n        }\n      });\n      console.log('Upload Successful', res.data);\n\n      // Reset state after successful upload\n      setError('');\n      setImages(Array(numImages).fill(null));\n      setDescription('');\n      alert('Upload successful!');\n    } catch (err) {\n      console.error('Upload error:', err.message);\n      setError('There was an error uploading the images.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: numImages,\n          onChange: handleNumImagesChange,\n          children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n        gap: '10px'\n      },\n      children: Array.from({\n        length: numImages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          textAlign: 'center'\n        },\n        children: images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(images[index]),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(index),\n            style: {\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              borderRadius: '50%',\n              width: '20px',\n              height: '20px',\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100px',\n              height: '100px',\n              border: '1px dashed gray',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'pointer'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => handleFileChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter a description here...\",\n        style: {\n          width: '100%',\n          height: '80px',\n          padding: '10px',\n          fontSize: '14px',\n          border: '1px solid gray',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        color: 'red',\n        fontSize: '14px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: 'blue',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePage, \"Z7iK1PcT+GZS2NS72sllTr16Uss=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePage","_s","numImages","setNumImages","images","setImages","description","setDescription","error","setError","name","color","stickers","MAX_FILE_SIZE","MAX_WIDTH","MAX_HEIGHT","handleNumImagesChange","event","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","file","files","size","alert","updatedImages","handleRemove","resizeImage","Promise","resolve","reject","reader","FileReader","onloadend","img","Image","src","result","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","toDataURL","onerror","readAsDataURL","handleUpload","filter","image","length","imagePromises","map","resizedBase64Images","all","token","localStorage","getItem","scrapData","binaryImages","res","post","process","env","REACT_APP_SERVER_URL","headers","console","log","data","err","message","children","onChange","num","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","Math","min","gap","from","_","position","textAlign","URL","createObjectURL","alt","objectFit","onClick","top","right","backgroundColor","border","borderRadius","cursor","alignItems","justifyContent","type","e","marginTop","placeholder","padding","fontSize","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function CreatePage() {\n  const [numImages, setNumImages] = useState(1);\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const name = \"TEST3\";\n  const color = \"paleGreen\";\n  const stickers = [\n    {\n      \"stickerType\": \"emoji\",\n      \"position\": [\n        { \"x\": 10, \"y\": 20 },\n        { \"x\": 30, \"y\": 40 }\n      ]\n    },\n  ];\n\n  const MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\n  const MAX_WIDTH = 800;\n  const MAX_HEIGHT = 800;\n\n  const handleNumImagesChange = (event) => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null));\n    setError('');\n  };\n\n  const handleFileChange = (index, event) => {\n    const file = event.target.files[0];\n    if (file && file.size > MAX_FILE_SIZE) {\n      alert('File is too large. Please upload a file smaller than 5MB.');\n      return;\n    }\n\n    const updatedImages = [...images];\n    updatedImages[index] = file;\n    setImages(updatedImages);\n    setError('');\n  };\n\n  const handleRemove = (index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n\n  const resizeImage = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.src = reader.result;\n\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n\n          let width = img.width;\n          let height = img.height;\n\n          if (width > height) {\n            if (width > MAX_WIDTH) {\n              height *= MAX_WIDTH / width;\n              width = MAX_WIDTH;\n            }\n          } else {\n            if (height > MAX_HEIGHT) {\n              width *= MAX_HEIGHT / height;\n              height = MAX_HEIGHT;\n            }\n          }\n\n          canvas.width = width;\n          canvas.height = height;\n          ctx.drawImage(img, 0, 0, width, height);\n\n          resolve(canvas.toDataURL('image/jpeg')); // Base64 encoded image\n        };\n\n        img.onerror = reject;\n      };\n      reader.onerror = reject;\n      reader.readAsDataURL(file); // Reads the file as base64\n    });\n  };\n\n  // const handleUpload = async () => {\n  //   // Check if all required images are uploaded\n  //   if (images.filter((image) => image !== null).length !== numImages) {\n  //     setError(`Please upload all ${numImages} images before proceeding.`);\n  //     return;\n  //   }\n\n  //   // Resize images and convert to Base64\n  //   const imagePromises = images.map((file) => resizeImage(file));\n\n  //   try {\n  //     const resizedBase64Images = await Promise.all(imagePromises);\n\n  //     // Send to server\n  //     const scrapData = {\n  //       name,\n  //       binaryImages: resizedBase64Images,\n  //       description,\n  //       color,\n  //       stickers\n  //     };\n\n  //     const res = await axios.post(`${process.env.REACT_APP_SERVER_URL}/scrap-pages/add-page`, scrapData);\n  //     console.log('Upload Successful', res.data);\n\n  //     // Reset state after successful upload\n  //     setError('');\n  //     setImages(Array(numImages).fill(null));\n  //     setDescription('');\n  //     alert('Upload successful!');\n  //   } catch (err) {\n  //     console.error('Upload error:', err.message);\n  //     setError('There was an error uploading the images.');\n  //   }\n  // };\n\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter((image) => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n  \n    // Resize images and convert to Base64\n    const imagePromises = images.map((file) => resizeImage(file));\n  \n    try {\n      const resizedBase64Images = await Promise.all(imagePromises);\n  \n      // Retrieve user token from local storage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You must be logged in to upload a scrapbook page.');\n        return;\n      }\n  \n      // Send to server\n      const scrapData = {\n        // name,\n        binaryImages: resizedBase64Images,\n        description,\n        color,\n        stickers,\n      };\n  \n      const res = await axios.post(\n        `${process.env.REACT_APP_SERVER_URL}/scrap-pages/post`,\n        scrapData,\n        {\n          headers: {\n            'x-auth-token': token, // Include the token in the request headers\n          },\n        }\n      );\n  \n      console.log('Upload Successful', res.data);\n  \n      // Reset state after successful upload\n      setError('');\n      setImages(Array(numImages).fill(null));\n      setDescription('');\n      alert('Upload successful!');\n    } catch (err) {\n      console.error('Upload error:', err.message);\n      setError('There was an error uploading the images.');\n    }\n  };\n  \n\n  return (\n    <div>\n      {/* Dropdown for Number of Images */}\n      <div>\n        <label>\n          Select number of images:\n          <select value={numImages} onChange={handleNumImagesChange}>\n            {[1, 2, 3, 4].map((num) => (\n              <option key={num} value={num}>\n                {num}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {/* Dynamic Grid for Image Slots */}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px',\n        }}\n      >\n        {Array.from({ length: numImages }).map((_, index) => (\n          <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n            {images[index] ? (\n              <>\n                <img\n                  src={URL.createObjectURL(images[index])}\n                  alt=\"Preview\"\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                  }}\n                />\n                <button\n                  onClick={() => handleRemove(index)}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'red',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    width: '20px',\n                    height: '20px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  &times;\n                </button>\n              </>\n            ) : (\n              <label>\n                <div\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    border: '1px dashed gray',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    cursor: 'pointer',\n                  }}\n                >\n                  +\n                </div>\n                <input\n                  type=\"file\"\n                  style={{ display: 'none' }}\n                  onChange={(e) => handleFileChange(index, e)}\n                />\n              </label>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Text Input Section */}\n      <div style={{ marginTop: '20px' }}>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Enter a description here...\"\n          style={{\n            width: '100%',\n            height: '80px',\n            padding: '10px',\n            fontSize: '14px',\n            border: '1px solid gray',\n            borderRadius: '5px',\n          }}\n        ></textarea>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div\n          style={{\n            marginTop: '10px',\n            color: 'red',\n            fontSize: '14px',\n          }}\n        >\n          {error}\n        </div>\n      )}\n\n      {/* Upload Button */}\n      <button\n        onClick={handleUpload}\n        style={{\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: 'blue',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Upload\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}