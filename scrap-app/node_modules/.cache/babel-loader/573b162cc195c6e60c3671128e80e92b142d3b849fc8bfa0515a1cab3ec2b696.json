{"ast":null,"code":"// import PropTypes from 'prop-types';\n// import * as SecureStore from 'react-secure-store';\n\n// export default function Storage({ key, value, saveKey }) {\n//   async function save() {\n//     await SecureStore.setItemAsync(key, value).then();\n//   }\n//   async function getValue() {\n//     const result = await SecureStore.getItemAsync(key);\n//     if (!result) {\n//       console.log('No values stored under that key.');\n//       return 'No values stored under this key.';\n//     }\n//     return result;\n//   }\n\n//   if (saveKey) {\n//     save();\n//   } else {\n//     return getValue();\n//   }\n// }\n\n// Storage.propTypes = {\n//   key: PropTypes.string.isRequired,\n//   value: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.string),\n//     PropTypes.arrayOf(PropTypes.object),\n//   ]).isRequired,\n//   saveKey: PropTypes.bool,\n// };\n\n// Storage.defaultProps = {\n//   saveKey: false,\n// };","map":{"version":3,"names":[],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/Storage.js"],"sourcesContent":["// import PropTypes from 'prop-types';\n// import * as SecureStore from 'react-secure-store';\n\n// export default function Storage({ key, value, saveKey }) {\n//   async function save() {\n//     await SecureStore.setItemAsync(key, value).then();\n//   }\n//   async function getValue() {\n//     const result = await SecureStore.getItemAsync(key);\n//     if (!result) {\n//       console.log('No values stored under that key.');\n//       return 'No values stored under this key.';\n//     }\n//     return result;\n//   }\n\n//   if (saveKey) {\n//     save();\n//   } else {\n//     return getValue();\n//   }\n// }\n\n// Storage.propTypes = {\n//   key: PropTypes.string.isRequired,\n//   value: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.string),\n//     PropTypes.arrayOf(PropTypes.object),\n//   ]).isRequired,\n//   saveKey: PropTypes.bool,\n// };\n\n// Storage.defaultProps = {\n//   saveKey: false,\n// };"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}