{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePage() {\n  _s();\n  const [numImages, setNumImages] = useState(1);\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const name = \"TEST3\";\n  const color = \"paleGreen\";\n  const stickers = [{\n    \"stickerType\": \"emoji\",\n    \"position\": [{\n      \"x\": 10,\n      \"y\": 20\n    }, {\n      \"x\": 30,\n      \"y\": 40\n    }]\n  }];\n  const handleNumImagesChange = event => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null));\n    setError('');\n  };\n  const handleFileChange = (index, event) => {\n    const file = event.target.files[0];\n    if (!file) return; // Prevent errors if no file is selected\n    const updatedImages = [...images];\n    updatedImages[index] = file;\n    setImages(updatedImages);\n    setError('');\n  };\n  const handleRemove = index => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter(image => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n    console.log('Selected Images:', images);\n    console.log('Description:', description);\n\n    // Convert images to Base64\n    const imagePromises = images.map(file => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64Image = reader.result; // Base64-encoded string\n          resolve(base64Image); // Resolve the promise with the Base64 string\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(file); // Reads the file as Base64 data URL\n      });\n    });\n    try {\n      const base64Images = await Promise.all(imagePromises);\n      console.log(\"Base64 Encoded Images:\", base64Images);\n      const scrapData = {\n        name,\n        binaryImages: base64Images,\n        // Send Base64 strings to the backend\n        description,\n        color,\n        stickers\n      };\n      console.log(\"Sending scrapData to axios...\");\n      const res = await axios.post(\"http://localhost:4000/scrap-pages/post\", scrapData);\n      console.log(\"Axios request successful\");\n      if (res.data.error) {\n        console.error(res.data.error);\n      } else {\n        // const userId = res.data._id;\n        console.log(\"Storing user ID...\");\n        // await Storage({ key: 'userId', value: userId, saveKey: true });\n        console.log(\"Successfully stored user ID!\");\n      }\n    } catch (err) {\n      console.error(\"Error during image upload:\", err.message);\n    }\n\n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numImages,\n        onChange: handleNumImagesChange,\n        children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n        gap: '10px'\n      },\n      children: Array.from({\n        length: numImages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          textAlign: 'center'\n        },\n        children: images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(images[index]),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(index),\n            style: {\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              borderRadius: '50%',\n              width: '20px',\n              height: '20px',\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100px',\n              height: '100px',\n              border: '1px dashed gray',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'pointer'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            style: {\n              display: 'none'\n            },\n            onChange: e => handleFileChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Enter a description here...\",\n      style: {\n        width: '100%',\n        height: '80px',\n        marginTop: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePage, \"Z7iK1PcT+GZS2NS72sllTr16Uss=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePage","_s","numImages","setNumImages","images","setImages","description","setDescription","error","setError","name","color","stickers","handleNumImagesChange","event","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","file","files","updatedImages","handleRemove","handleUpload","filter","image","length","console","log","imagePromises","map","Promise","resolve","reject","reader","FileReader","onloadend","base64Image","result","onerror","readAsDataURL","base64Images","all","scrapData","binaryImages","res","post","data","err","message","alert","children","onChange","num","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","Math","min","gap","from","_","position","textAlign","src","URL","createObjectURL","alt","width","height","objectFit","onClick","top","right","backgroundColor","border","borderRadius","cursor","alignItems","justifyContent","type","e","placeholder","marginTop","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function CreatePage() {\n  const [numImages, setNumImages] = useState(1);\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const name = \"TEST3\";\n  const color = \"paleGreen\";\n  const stickers = [\n    {\n      \"stickerType\": \"emoji\",\n      \"position\": [\n        { \"x\": 10, \"y\": 20 },\n        { \"x\": 30, \"y\": 40 },\n      ],\n    },\n  ];\n\n  const handleNumImagesChange = (event) => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null));\n    setError('');\n  };\n\n  const handleFileChange = (index, event) => {\n    const file = event.target.files[0];\n    if (!file) return; // Prevent errors if no file is selected\n    const updatedImages = [...images];\n    updatedImages[index] = file;\n    setImages(updatedImages);\n    setError('');\n  };\n\n  const handleRemove = (index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n\n  const handleUpload = async () => {\n    // Check if all required images are uploaded\n    if (images.filter((image) => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n  \n    console.log('Selected Images:', images);\n    console.log('Description:', description);\n  \n    // Convert images to Base64\n    const imagePromises = images.map((file) => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64Image = reader.result; // Base64-encoded string\n          resolve(base64Image); // Resolve the promise with the Base64 string\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(file); // Reads the file as Base64 data URL\n      });\n    });\n  \n    try {\n      const base64Images = await Promise.all(imagePromises);\n      console.log(\"Base64 Encoded Images:\", base64Images);\n  \n      const scrapData = {\n        name,\n        binaryImages: base64Images, // Send Base64 strings to the backend\n        description,\n        color,\n        stickers,\n      };\n  \n      console.log(\"Sending scrapData to axios...\");\n      const res = await axios.post(\"http://localhost:4000/scrap-pages/post\", scrapData);\n  \n      console.log(\"Axios request successful\");\n      if (res.data.error) {\n        console.error(res.data.error);\n      } else {\n        // const userId = res.data._id;\n        console.log(\"Storing user ID...\");\n        // await Storage({ key: 'userId', value: userId, saveKey: true });\n        console.log(\"Successfully stored user ID!\");\n      }\n    } catch (err) {\n      console.error(\"Error during image upload:\", err.message);\n    }\n  \n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n\n  return (\n    <div>\n      <label>\n        Select number of images:\n        <select value={numImages} onChange={handleNumImagesChange}>\n          {[1, 2, 3, 4].map((num) => (\n            <option key={num} value={num}>\n              {num}\n            </option>\n          ))}\n        </select>\n      </label>\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px',\n        }}\n      >\n        {Array.from({ length: numImages }).map((_, index) => (\n          <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n            {images[index] ? (\n              <>\n                <img\n                  src={URL.createObjectURL(images[index])}\n                  alt=\"Preview\"\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                  }}\n                />\n                <button\n                  onClick={() => handleRemove(index)}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'red',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    width: '20px',\n                    height: '20px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  &times;\n                </button>\n              </>\n            ) : (\n              <label>\n                <div\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    border: '1px dashed gray',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    cursor: 'pointer',\n                  }}\n                >\n                  +\n                </div>\n                <input\n                  type=\"file\"\n                  style={{ display: 'none' }}\n                  onChange={(e) => handleFileChange(index, e)}\n                />\n              </label>\n            )}\n          </div>\n        ))}\n      </div>\n      <textarea\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder=\"Enter a description here...\"\n        style={{\n          width: '100%',\n          height: '80px',\n          marginTop: '20px',\n        }}\n      ></textarea>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}