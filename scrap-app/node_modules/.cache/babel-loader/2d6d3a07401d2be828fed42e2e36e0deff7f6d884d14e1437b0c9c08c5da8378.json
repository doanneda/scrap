{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePage() {\n  _s();\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n  const [error, setError] = useState(''); // Error message for validation feedback\n\n  const handleNumImagesChange = event => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n    setError(''); // Clear error when images changed\n  };\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n    setError('');\n  };\n\n  // Removing images\n  const handleRemove = index => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n  const handleUpload = () => {\n    // Check if all required images are uploaded\n    if (images.filter(image => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n\n    // If all images are uploaded, proceed with upload logic\n    console.log('Selected Images:', images);\n    console.log('Description:', description);\n\n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: numImages,\n          onChange: handleNumImagesChange,\n          children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n        gap: '10px'\n      },\n      children: Array.from({\n        length: numImages\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          textAlign: 'center'\n        },\n        children: images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(images[index]),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(index),\n            style: {\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              borderRadius: '50%',\n              width: '20px',\n              height: '20px',\n              cursor: 'pointer'\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          style: {\n            width: '100px',\n            height: '100px',\n            border: '1px dashed gray',\n            cursor: 'pointer'\n          },\n          onChange: e => handleFileChange(index, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter a description here...\",\n        style: {\n          width: '100%',\n          height: '80px',\n          padding: '10px',\n          fontSize: '14px',\n          border: '1px solid gray',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        color: 'red',\n        fontSize: '14px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: 'blue',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)\n\n  // <Link to=\"login\">\n  //     <button>Login</button>\n  // </Link>\n  ;\n}\n_s(CreatePage, \"Z7iK1PcT+GZS2NS72sllTr16Uss=\");\n_c = CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["Link","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePage","_s","numImages","setNumImages","images","setImages","description","setDescription","error","setError","handleNumImagesChange","event","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","updatedImages","files","handleRemove","handleUpload","filter","image","length","console","log","alert","children","onChange","map","num","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","Math","min","gap","from","_","position","textAlign","src","URL","createObjectURL","alt","width","height","objectFit","onClick","top","right","backgroundColor","color","border","borderRadius","cursor","type","e","marginTop","placeholder","padding","fontSize","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nexport default function CreatePage() {\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store the uploaded images\n  const [description, setDescription] = useState(''); // Store the description\n  const [error, setError] = useState(''); // Error message for validation feedback\n\n  const handleNumImagesChange = (event) => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n    setError(''); // Clear error when images changed\n  };\n\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n    setError(''); \n  };\n\n  // Removing images\n  const handleRemove = (index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = null;\n    setImages(updatedImages);\n  };\n\n  const handleUpload = () => {\n    // Check if all required images are uploaded\n    if (images.filter((image) => image !== null).length !== numImages) {\n      setError(`Please upload all ${numImages} images before proceeding.`);\n      return;\n    }\n\n    // If all images are uploaded, proceed with upload logic\n    console.log('Selected Images:', images);\n    console.log('Description:', description);\n\n    // Reset state\n    setError('');\n    setImages(Array(numImages).fill(null));\n    setDescription('');\n    alert('Upload successful!');\n  };\n\n  return (\n    <div>\n      {/* Dropdown for Number of Images */}\n      <div>\n        <label>\n          Select number of images:\n          <select\n            value={numImages}\n            onChange={handleNumImagesChange}\n          >\n            {[1, 2, 3, 4].map((num) => (\n              <option key={num} value={num}>\n                {num}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {/* Dynamic Grid */}\n      <div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px',\n        }}\n      >\n        {Array.from({ length: numImages }).map((_, index) => (\n          <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n            {images[index] ? (\n              <>\n                <img\n                  src={URL.createObjectURL(images[index])}\n                  alt=\"Preview\"\n                  style={{\n                    width: '100px',\n                    height: '100px',\n                    objectFit: 'cover',\n                  }}\n                />\n                <button\n                  onClick={() => handleRemove(index)}\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    backgroundColor: 'red',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '50%',\n                    width: '20px',\n                    height: '20px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  &times;\n                </button>\n              </>\n            ) : (\n                <input\n                  type=\"file\"\n                  style= {{\n                    width: '100px',\n                    height: '100px',\n                    border: '1px dashed gray',\n                    cursor: 'pointer', \n                  }}\n                  onChange={(e) => handleFileChange(index, e)}\n                />\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Text Input Section */}\n      <div style={{ marginTop: '20px' }}>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Enter a description here...\"\n          style={{\n            width: '100%',\n            height: '80px',\n            padding: '10px',\n            fontSize: '14px',\n            border: '1px solid gray',\n            borderRadius: '5px',\n          }}\n        ></textarea>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div\n          style={{\n            marginTop: '10px',\n            color: 'red',\n            fontSize: '14px',\n          }}\n        >\n          {error}\n        </div>\n      )}\n\n      {/* Upload Button */}\n      <button\n        onClick={handleUpload}\n        style={{\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: 'blue',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Upload\n      </button>\n    </div>\n    \n\n    // <Link to=\"login\">\n    //     <button>Login</button>\n    // </Link>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}