{"ast":null,"code":"var _jsxFileName = \"/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js\",\n  _s = $RefreshSig$();\n// import { Link } from 'react-router-dom';\n// import React, { useState } from 'react';\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageStickerUploader() {\n  _s();\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store uploaded images\n  const [description, setDescription] = useState(''); // Store description\n  const [stickers, setStickers] = useState([]); // Store sticker positions\n  const [savedFrames, setSavedFrames] = useState([]); // Store saved frames for another page\n\n  const handleNumImagesChange = event => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images\n    setStickers([]); // Clear stickers\n  };\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n  };\n  const handleRemove = index => {\n    const updatedImages = [...images];\n    updatedImages[index] = null; // Clear specific image slot\n    setImages(updatedImages);\n  };\n  const handleStickerDragStart = sticker => event => {\n    event.dataTransfer.setData('sticker', sticker);\n  };\n  const handleDrop = index => event => {\n    event.preventDefault();\n    const sticker = event.dataTransfer.getData('sticker');\n    setStickers(prevStickers => [...prevStickers, {\n      sticker,\n      imageIndex: index,\n      position: {\n        x: event.clientX,\n        y: event.clientY\n      }\n    }]);\n  };\n  const saveFrame = () => {\n    const frame = {\n      images,\n      stickers,\n      description\n    };\n    setSavedFrames([...savedFrames, frame]);\n    alert('Frame saved!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select number of images:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: numImages,\n          onChange: handleNumImagesChange,\n          style: {\n            marginLeft: '10px',\n            padding: '5px',\n            fontSize: '14px',\n            borderRadius: '5px'\n          },\n          children: [1, 2, 3, 4].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: num,\n            children: num\n          }, num, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        gap: '10px'\n      },\n      children: ['⭐', '❤️', '🎉', '🌟'].map(sticker => /*#__PURE__*/_jsxDEV(\"button\", {\n        draggable: true,\n        onDragStart: handleStickerDragStart(sticker),\n        style: {\n          fontSize: '20px',\n          padding: '10px',\n          cursor: 'grab',\n          border: '1px solid gray',\n          borderRadius: '5px'\n        },\n        children: sticker\n      }, sticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        // Border for the frame\n        borderRadius: '10px',\n        padding: '10px',\n        marginBottom: '20px',\n        display: 'inline-block'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n          gap: '10px'\n        },\n        children: Array.from({\n          length: numImages\n        }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            textAlign: 'center',\n            width: '150px',\n            height: '150px',\n            border: '1px dashed gray',\n            backgroundColor: '#f8f8f8' // Light background for better visibility\n          },\n          onDragOver: e => e.preventDefault(),\n          onDrop: handleDrop(index),\n          children: [images[index] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(images[index]),\n              alt: \"Preview\",\n              style: {\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemove(index),\n              style: {\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                borderRadius: '50%',\n                width: '20px',\n                height: '20px',\n                cursor: 'pointer'\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                cursor: 'pointer'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              style: {\n                display: 'none'\n              },\n              onChange: e => handleFileChange(index, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), stickers.filter(sticker => sticker.imageIndex === index).map((sticker, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: `${sticker.position.y}px`,\n              left: `${sticker.position.x}px`,\n              fontSize: '20px'\n            },\n            children: sticker.sticker\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter a description here...\",\n        style: {\n          width: '100%',\n          height: '80px',\n          padding: '10px',\n          fontSize: '14px',\n          border: '1px solid gray',\n          borderRadius: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveFrame,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: 'green',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Save Frame\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageStickerUploader, \"G9AU7Fwvlo7bFiYJnDrN4l+FhKU=\");\n_c = ImageStickerUploader;\nexport default ImageStickerUploader;\n\n// export default function CreatePage() {\n//   const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n//   const [images, setImages] = useState([]); // Store the uploaded images\n//   const [description, setDescription] = useState(''); // Store the description\n//   const [error, setError] = useState(''); // Error message for validation feedback\n\n//   const handleNumImagesChange = (event) => {\n//     const newNumImages = parseInt(event.target.value, 10);\n//     setNumImages(newNumImages);\n//     setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n//     setError(''); // Clear error when images changed\n//   };\n\n//   const handleFileChange = (index, event) => {\n//     const updatedImages = [...images];\n//     updatedImages[index] = event.target.files[0];\n//     setImages(updatedImages);\n//     setError(''); \n//   };\n\n//   // Removing images\n//   const handleRemove = (index) => {\n//     const updatedImages = [...images];\n//     updatedImages[index] = null;\n//     setImages(updatedImages);\n//   };\n\n//   const handleUpload = () => {\n//     // Check if all required images are uploaded\n//     if (images.filter((image) => image !== null).length !== numImages) {\n//       setError(`Please upload all ${numImages} images before proceeding.`);\n//       return;\n//     }\n\n//     // If all images are uploaded, proceed with upload logic\n//     console.log('Selected Images:', images);\n//     console.log('Description:', description);\n\n//     // Reset state\n//     setError('');\n//     setImages(Array(numImages).fill(null));\n//     setDescription('');\n//     alert('Upload successful!');\n//   };\n\n//   return (\n//     <div>\n//       {/* Dropdown for Number of Images */}\n//       <div>\n//         <label>\n//           Select number of images:\n//           <select\n//             value={numImages}\n//             onChange={handleNumImagesChange}\n//           >\n//             {[1, 2, 3, 4].map((num) => (\n//               <option key={num} value={num}>\n//                 {num}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//       </div>\n\n//       {/* Dynamic Grid */}\n//       <div\n//         style={{\n//           display: 'grid',\n//           gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n//           gap: '10px',\n//         }}\n//       >\n//         {Array.from({ length: numImages }).map((_, index) => (\n//           <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n//             {images[index] ? (\n//               <>\n//                 <img\n//                   src={URL.createObjectURL(images[index])}\n//                   alt=\"Preview\"\n//                   style={{\n//                     width: '100px',\n//                     height: '100px',\n//                     objectFit: 'cover',\n//                   }}\n//                 />\n//                 <button\n//                   onClick={() => handleRemove(index)}\n//                   style={{\n//                     position: 'absolute',\n//                     top: 0,\n//                     right: 0,\n//                     backgroundColor: 'red',\n//                     color: 'white',\n//                     border: 'none',\n//                     borderRadius: '50%',\n//                     width: '20px',\n//                     height: '20px',\n//                     cursor: 'pointer',\n//                   }}\n//                 >\n//                   &times;\n//                 </button>\n//               </>\n//             ) : (\n//               <label>\n//                 <div\n//                   style={{\n//                     width: '100px',\n//                     height: '100px',\n//                     border: '1px dashed gray',\n//                     display: 'flex',\n//                     alignItems: 'center',\n//                     justifyContent: 'center',\n//                     cursor: 'pointer',\n//                   }}\n//                 >\n//                   +\n//                 </div>\n//                 <input\n//                   type=\"file\"\n//                   style={{ display: 'none' }}\n//                   onChange={(e) => handleFileChange(index, e)}\n//                 />\n//               </label>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Text Input Section */}\n//       <div style={{ marginTop: '20px' }}>\n//         <textarea\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           placeholder=\"Enter a description here...\"\n//           style={{\n//             width: '100%',\n//             height: '80px',\n//             padding: '10px',\n//             fontSize: '14px',\n//             border: '1px solid gray',\n//             borderRadius: '5px',\n//           }}\n//         ></textarea>\n//       </div>\n\n//       {/* Error Message */}\n//       {error && (\n//         <div\n//           style={{\n//             marginTop: '10px',\n//             color: 'red',\n//             fontSize: '14px',\n//           }}\n//         >\n//           {error}\n//         </div>\n//       )}\n\n//       {/* Upload Button */}\n//       <button\n//         onClick={handleUpload}\n//         style={{\n//           marginTop: '20px',\n//           padding: '10px 20px',\n//           backgroundColor: 'blue',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: '5px',\n//           cursor: 'pointer',\n//         }}\n//       >\n//         Upload\n//       </button>\n//     </div>\n\n//     // <Link to=\"login\">\n//     //     <button>Login</button>\n//     // </Link>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"ImageStickerUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageStickerUploader","_s","numImages","setNumImages","images","setImages","description","setDescription","stickers","setStickers","savedFrames","setSavedFrames","handleNumImagesChange","event","newNumImages","parseInt","target","value","Array","fill","handleFileChange","index","updatedImages","files","handleRemove","handleStickerDragStart","sticker","dataTransfer","setData","handleDrop","preventDefault","getData","prevStickers","imageIndex","position","x","clientX","y","clientY","saveFrame","frame","alert","children","style","marginBottom","onChange","marginLeft","padding","fontSize","borderRadius","map","num","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","draggable","onDragStart","cursor","border","gridTemplateColumns","Math","min","from","length","_","textAlign","width","height","backgroundColor","onDragOver","e","onDrop","src","URL","createObjectURL","alt","objectFit","onClick","top","right","color","alignItems","justifyContent","type","filter","i","left","marginTop","placeholder","_c","$RefreshReg$"],"sources":["/Users/jasminewongphatarakul/scrap/scrap/scrap-app/src/CreatePage.js"],"sourcesContent":["// import { Link } from 'react-router-dom';\n// import React, { useState } from 'react';\n\nimport React, { useState } from 'react';\n\nfunction ImageStickerUploader() {\n  const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n  const [images, setImages] = useState([]); // Store uploaded images\n  const [description, setDescription] = useState(''); // Store description\n  const [stickers, setStickers] = useState([]); // Store sticker positions\n  const [savedFrames, setSavedFrames] = useState([]); // Store saved frames for another page\n\n  const handleNumImagesChange = (event) => {\n    const newNumImages = parseInt(event.target.value, 10);\n    setNumImages(newNumImages);\n    setImages(Array(newNumImages).fill(null)); // Reset images\n    setStickers([]); // Clear stickers\n  };\n\n  const handleFileChange = (index, event) => {\n    const updatedImages = [...images];\n    updatedImages[index] = event.target.files[0];\n    setImages(updatedImages);\n  };\n\n  const handleRemove = (index) => {\n    const updatedImages = [...images];\n    updatedImages[index] = null; // Clear specific image slot\n    setImages(updatedImages);\n  };\n\n  const handleStickerDragStart = (sticker) => (event) => {\n    event.dataTransfer.setData('sticker', sticker);\n  };\n\n  const handleDrop = (index) => (event) => {\n    event.preventDefault();\n    const sticker = event.dataTransfer.getData('sticker');\n    setStickers((prevStickers) => [\n      ...prevStickers,\n      { sticker, imageIndex: index, position: { x: event.clientX, y: event.clientY } },\n    ]);\n  };\n\n  const saveFrame = () => {\n    const frame = {\n      images,\n      stickers,\n      description,\n    };\n    setSavedFrames([...savedFrames, frame]);\n    alert('Frame saved!');\n  };\n\n  return (\n    <div>\n      {/* Dropdown for Number of Images */}\n      <div style={{ marginBottom: '20px' }}>\n        <label>\n          Select number of images:\n          <select\n            value={numImages}\n            onChange={handleNumImagesChange}\n            style={{\n              marginLeft: '10px',\n              padding: '5px',\n              fontSize: '14px',\n              borderRadius: '5px',\n            }}\n          >\n            {[1, 2, 3, 4].map((num) => (\n              <option key={num} value={num}>\n                {num}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      {/* Sticker Options */}\n      <div style={{ marginBottom: '20px', display: 'flex', gap: '10px' }}>\n        {['⭐', '❤️', '🎉', '🌟'].map((sticker) => (\n          <button\n            key={sticker}\n            draggable\n            onDragStart={handleStickerDragStart(sticker)}\n            style={{\n              fontSize: '20px',\n              padding: '10px',\n              cursor: 'grab',\n              border: '1px solid gray',\n              borderRadius: '5px',\n            }}\n          >\n            {sticker}\n          </button>\n        ))}\n      </div>\n\n      {/* Frame with Dynamic Grid */}\n      <div\n        style={{\n          border: '2px solid black', // Border for the frame\n          borderRadius: '10px',\n          padding: '10px',\n          marginBottom: '20px',\n          display: 'inline-block',\n        }}\n      >\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n            gap: '10px',\n          }}\n        >\n          {Array.from({ length: numImages }).map((_, index) => (\n            <div\n              key={index}\n              style={{\n                position: 'relative',\n                textAlign: 'center',\n                width: '150px',\n                height: '150px',\n                border: '1px dashed gray',\n                backgroundColor: '#f8f8f8', // Light background for better visibility\n              }}\n              onDragOver={(e) => e.preventDefault()}\n              onDrop={handleDrop(index)}\n            >\n              {images[index] ? (\n                <>\n                  <img\n                    src={URL.createObjectURL(images[index])}\n                    alt=\"Preview\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'cover',\n                    }}\n                  />\n                  <button\n                    onClick={() => handleRemove(index)}\n                    style={{\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      backgroundColor: 'red',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '50%',\n                      width: '20px',\n                      height: '20px',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    &times;\n                  </button>\n                </>\n              ) : (\n                <label>\n                  <div\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      cursor: 'pointer',\n                    }}\n                  >\n                    +\n                  </div>\n                  <input\n                    type=\"file\"\n                    style={{ display: 'none' }}\n                    onChange={(e) => handleFileChange(index, e)}\n                  />\n                </label>\n              )}\n\n              {/* Render Stickers */}\n              {stickers\n                .filter((sticker) => sticker.imageIndex === index)\n                .map((sticker, i) => (\n                  <div\n                    key={i}\n                    style={{\n                      position: 'absolute',\n                      top: `${sticker.position.y}px`,\n                      left: `${sticker.position.x}px`,\n                      fontSize: '20px',\n                    }}\n                  >\n                    {sticker.sticker}\n                  </div>\n                ))}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Text Input Section */}\n      <div style={{ marginTop: '20px' }}>\n        <textarea\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Enter a description here...\"\n          style={{\n            width: '100%',\n            height: '80px',\n            padding: '10px',\n            fontSize: '14px',\n            border: '1px solid gray',\n            borderRadius: '5px',\n          }}\n        ></textarea>\n      </div>\n\n      {/* Save Frame Button */}\n      <button\n        onClick={saveFrame}\n        style={{\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: 'green',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Save Frame\n      </button>\n    </div>\n  );\n}\n\nexport default ImageStickerUploader;\n\n\n\n// export default function CreatePage() {\n//   const [numImages, setNumImages] = useState(1); // Number of image slots (1 to 4)\n//   const [images, setImages] = useState([]); // Store the uploaded images\n//   const [description, setDescription] = useState(''); // Store the description\n//   const [error, setError] = useState(''); // Error message for validation feedback\n\n//   const handleNumImagesChange = (event) => {\n//     const newNumImages = parseInt(event.target.value, 10);\n//     setNumImages(newNumImages);\n//     setImages(Array(newNumImages).fill(null)); // Reset images array to match the new count\n//     setError(''); // Clear error when images changed\n//   };\n\n//   const handleFileChange = (index, event) => {\n//     const updatedImages = [...images];\n//     updatedImages[index] = event.target.files[0];\n//     setImages(updatedImages);\n//     setError(''); \n//   };\n\n//   // Removing images\n//   const handleRemove = (index) => {\n//     const updatedImages = [...images];\n//     updatedImages[index] = null;\n//     setImages(updatedImages);\n//   };\n\n//   const handleUpload = () => {\n//     // Check if all required images are uploaded\n//     if (images.filter((image) => image !== null).length !== numImages) {\n//       setError(`Please upload all ${numImages} images before proceeding.`);\n//       return;\n//     }\n\n//     // If all images are uploaded, proceed with upload logic\n//     console.log('Selected Images:', images);\n//     console.log('Description:', description);\n\n//     // Reset state\n//     setError('');\n//     setImages(Array(numImages).fill(null));\n//     setDescription('');\n//     alert('Upload successful!');\n//   };\n\n//   return (\n//     <div>\n//       {/* Dropdown for Number of Images */}\n//       <div>\n//         <label>\n//           Select number of images:\n//           <select\n//             value={numImages}\n//             onChange={handleNumImagesChange}\n//           >\n//             {[1, 2, 3, 4].map((num) => (\n//               <option key={num} value={num}>\n//                 {num}\n//               </option>\n//             ))}\n//           </select>\n//         </label>\n//       </div>\n\n//       {/* Dynamic Grid */}\n//       <div\n//         style={{\n//           display: 'grid',\n//           gridTemplateColumns: `repeat(${Math.min(2, numImages)}, 1fr)`,\n//           gap: '10px',\n//         }}\n//       >\n//         {Array.from({ length: numImages }).map((_, index) => (\n//           <div key={index} style={{ position: 'relative', textAlign: 'center' }}>\n//             {images[index] ? (\n//               <>\n//                 <img\n//                   src={URL.createObjectURL(images[index])}\n//                   alt=\"Preview\"\n//                   style={{\n//                     width: '100px',\n//                     height: '100px',\n//                     objectFit: 'cover',\n//                   }}\n//                 />\n//                 <button\n//                   onClick={() => handleRemove(index)}\n//                   style={{\n//                     position: 'absolute',\n//                     top: 0,\n//                     right: 0,\n//                     backgroundColor: 'red',\n//                     color: 'white',\n//                     border: 'none',\n//                     borderRadius: '50%',\n//                     width: '20px',\n//                     height: '20px',\n//                     cursor: 'pointer',\n//                   }}\n//                 >\n//                   &times;\n//                 </button>\n//               </>\n//             ) : (\n//               <label>\n//                 <div\n//                   style={{\n//                     width: '100px',\n//                     height: '100px',\n//                     border: '1px dashed gray',\n//                     display: 'flex',\n//                     alignItems: 'center',\n//                     justifyContent: 'center',\n//                     cursor: 'pointer',\n//                   }}\n//                 >\n//                   +\n//                 </div>\n//                 <input\n//                   type=\"file\"\n//                   style={{ display: 'none' }}\n//                   onChange={(e) => handleFileChange(index, e)}\n//                 />\n//               </label>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Text Input Section */}\n//       <div style={{ marginTop: '20px' }}>\n//         <textarea\n//           value={description}\n//           onChange={(e) => setDescription(e.target.value)}\n//           placeholder=\"Enter a description here...\"\n//           style={{\n//             width: '100%',\n//             height: '80px',\n//             padding: '10px',\n//             fontSize: '14px',\n//             border: '1px solid gray',\n//             borderRadius: '5px',\n//           }}\n//         ></textarea>\n//       </div>\n\n//       {/* Error Message */}\n//       {error && (\n//         <div\n//           style={{\n//             marginTop: '10px',\n//             color: 'red',\n//             fontSize: '14px',\n//           }}\n//         >\n//           {error}\n//         </div>\n//       )}\n\n//       {/* Upload Button */}\n//       <button\n//         onClick={handleUpload}\n//         style={{\n//           marginTop: '20px',\n//           padding: '10px 20px',\n//           backgroundColor: 'blue',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: '5px',\n//           cursor: 'pointer',\n//         }}\n//       >\n//         Upload\n//       </button>\n//     </div>\n    \n\n//     // <Link to=\"login\">\n//     //     <button>Login</button>\n//     // </Link>\n//   );\n// }\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMiB,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;IACrDd,YAAY,CAACW,YAAY,CAAC;IAC1BT,SAAS,CAACa,KAAK,CAACJ,YAAY,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3CV,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMW,gBAAgB,GAAGA,CAACC,KAAK,EAAER,KAAK,KAAK;IACzC,MAAMS,aAAa,GAAG,CAAC,GAAGlB,MAAM,CAAC;IACjCkB,aAAa,CAACD,KAAK,CAAC,GAAGR,KAAK,CAACG,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;IAC5ClB,SAAS,CAACiB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAME,YAAY,GAAIH,KAAK,IAAK;IAC9B,MAAMC,aAAa,GAAG,CAAC,GAAGlB,MAAM,CAAC;IACjCkB,aAAa,CAACD,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;IAC7BhB,SAAS,CAACiB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMG,sBAAsB,GAAIC,OAAO,IAAMb,KAAK,IAAK;IACrDA,KAAK,CAACc,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEF,OAAO,CAAC;EAChD,CAAC;EAED,MAAMG,UAAU,GAAIR,KAAK,IAAMR,KAAK,IAAK;IACvCA,KAAK,CAACiB,cAAc,CAAC,CAAC;IACtB,MAAMJ,OAAO,GAAGb,KAAK,CAACc,YAAY,CAACI,OAAO,CAAC,SAAS,CAAC;IACrDtB,WAAW,CAAEuB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;MAAEN,OAAO;MAAEO,UAAU,EAAEZ,KAAK;MAAEa,QAAQ,EAAE;QAAEC,CAAC,EAAEtB,KAAK,CAACuB,OAAO;QAAEC,CAAC,EAAExB,KAAK,CAACyB;MAAQ;IAAE,CAAC,CACjF,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG;MACZpC,MAAM;MACNI,QAAQ;MACRF;IACF,CAAC;IACDK,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE8B,KAAK,CAAC,CAAC;IACvCC,KAAK,CAAC,cAAc,CAAC;EACvB,CAAC;EAED,oBACE5C,OAAA;IAAA6C,QAAA,gBAEE7C,OAAA;MAAK8C,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAF,QAAA,eACnC7C,OAAA;QAAA6C,QAAA,GAAO,0BAEL,eAAA7C,OAAA;UACEoB,KAAK,EAAEf,SAAU;UACjB2C,QAAQ,EAAEjC,qBAAsB;UAChC+B,KAAK,EAAE;YACLG,UAAU,EAAE,MAAM;YAClBC,OAAO,EAAE,KAAK;YACdC,QAAQ,EAAE,MAAM;YAChBC,YAAY,EAAE;UAChB,CAAE;UAAAP,QAAA,EAED,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACQ,GAAG,CAAEC,GAAG,iBACpBtD,OAAA;YAAkBoB,KAAK,EAAEkC,GAAI;YAAAT,QAAA,EAC1BS;UAAG,GADOA,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN1D,OAAA;MAAK8C,KAAK,EAAE;QAAEC,YAAY,EAAE,MAAM;QAAEY,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAf,QAAA,EAChE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACQ,GAAG,CAAExB,OAAO,iBACnC7B,OAAA;QAEE6D,SAAS;QACTC,WAAW,EAAElC,sBAAsB,CAACC,OAAO,CAAE;QAC7CiB,KAAK,EAAE;UACLK,QAAQ,EAAE,MAAM;UAChBD,OAAO,EAAE,MAAM;UACfa,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,gBAAgB;UACxBZ,YAAY,EAAE;QAChB,CAAE;QAAAP,QAAA,EAEDhB;MAAO,GAXHA,OAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN1D,OAAA;MACE8C,KAAK,EAAE;QACLkB,MAAM,EAAE,iBAAiB;QAAE;QAC3BZ,YAAY,EAAE,MAAM;QACpBF,OAAO,EAAE,MAAM;QACfH,YAAY,EAAE,MAAM;QACpBY,OAAO,EAAE;MACX,CAAE;MAAAd,QAAA,eAEF7C,OAAA;QACE8C,KAAK,EAAE;UACLa,OAAO,EAAE,MAAM;UACfM,mBAAmB,EAAE,UAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE9D,SAAS,CAAC,QAAQ;UAC7DuD,GAAG,EAAE;QACP,CAAE;QAAAf,QAAA,EAEDxB,KAAK,CAAC+C,IAAI,CAAC;UAAEC,MAAM,EAAEhE;QAAU,CAAC,CAAC,CAACgD,GAAG,CAAC,CAACiB,CAAC,EAAE9C,KAAK,kBAC9CxB,OAAA;UAEE8C,KAAK,EAAE;YACLT,QAAQ,EAAE,UAAU;YACpBkC,SAAS,EAAE,QAAQ;YACnBC,KAAK,EAAE,OAAO;YACdC,MAAM,EAAE,OAAO;YACfT,MAAM,EAAE,iBAAiB;YACzBU,eAAe,EAAE,SAAS,CAAE;UAC9B,CAAE;UACFC,UAAU,EAAGC,CAAC,IAAKA,CAAC,CAAC3C,cAAc,CAAC,CAAE;UACtC4C,MAAM,EAAE7C,UAAU,CAACR,KAAK,CAAE;UAAAqB,QAAA,GAEzBtC,MAAM,CAACiB,KAAK,CAAC,gBACZxB,OAAA,CAAAE,SAAA;YAAA2C,QAAA,gBACE7C,OAAA;cACE8E,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACzE,MAAM,CAACiB,KAAK,CAAC,CAAE;cACxCyD,GAAG,EAAC,SAAS;cACbnC,KAAK,EAAE;gBACL0B,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdS,SAAS,EAAE;cACb;YAAE;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACF1D,OAAA;cACEmF,OAAO,EAAEA,CAAA,KAAMxD,YAAY,CAACH,KAAK,CAAE;cACnCsB,KAAK,EAAE;gBACLT,QAAQ,EAAE,UAAU;gBACpB+C,GAAG,EAAE,CAAC;gBACNC,KAAK,EAAE,CAAC;gBACRX,eAAe,EAAE,KAAK;gBACtBY,KAAK,EAAE,OAAO;gBACdtB,MAAM,EAAE,MAAM;gBACdZ,YAAY,EAAE,KAAK;gBACnBoB,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdV,MAAM,EAAE;cACV,CAAE;cAAAlB,QAAA,EACH;YAED;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eACT,CAAC,gBAEH1D,OAAA;YAAA6C,QAAA,gBACE7C,OAAA;cACE8C,KAAK,EAAE;gBACL0B,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdd,OAAO,EAAE,MAAM;gBACf4B,UAAU,EAAE,QAAQ;gBACpBC,cAAc,EAAE,QAAQ;gBACxBzB,MAAM,EAAE;cACV,CAAE;cAAAlB,QAAA,EACH;YAED;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACN1D,OAAA;cACEyF,IAAI,EAAC,MAAM;cACX3C,KAAK,EAAE;gBAAEa,OAAO,EAAE;cAAO,CAAE;cAC3BX,QAAQ,EAAG4B,CAAC,IAAKrD,gBAAgB,CAACC,KAAK,EAAEoD,CAAC;YAAE;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CACR,EAGA/C,QAAQ,CACN+E,MAAM,CAAE7D,OAAO,IAAKA,OAAO,CAACO,UAAU,KAAKZ,KAAK,CAAC,CACjD6B,GAAG,CAAC,CAACxB,OAAO,EAAE8D,CAAC,kBACd3F,OAAA;YAEE8C,KAAK,EAAE;cACLT,QAAQ,EAAE,UAAU;cACpB+C,GAAG,EAAE,GAAGvD,OAAO,CAACQ,QAAQ,CAACG,CAAC,IAAI;cAC9BoD,IAAI,EAAE,GAAG/D,OAAO,CAACQ,QAAQ,CAACC,CAAC,IAAI;cAC/Ba,QAAQ,EAAE;YACZ,CAAE;YAAAN,QAAA,EAEDhB,OAAO,CAACA;UAAO,GARX8D,CAAC;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASH,CACN,CAAC;QAAA,GA9EClC,KAAK;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+EP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN1D,OAAA;MAAK8C,KAAK,EAAE;QAAE+C,SAAS,EAAE;MAAO,CAAE;MAAAhD,QAAA,eAChC7C,OAAA;QACEoB,KAAK,EAAEX,WAAY;QACnBuC,QAAQ,EAAG4B,CAAC,IAAKlE,cAAc,CAACkE,CAAC,CAACzD,MAAM,CAACC,KAAK,CAAE;QAChD0E,WAAW,EAAC,6BAA6B;QACzChD,KAAK,EAAE;UACL0B,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdvB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBa,MAAM,EAAE,gBAAgB;UACxBZ,YAAY,EAAE;QAChB;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAGN1D,OAAA;MACEmF,OAAO,EAAEzC,SAAU;MACnBI,KAAK,EAAE;QACL+C,SAAS,EAAE,MAAM;QACjB3C,OAAO,EAAE,WAAW;QACpBwB,eAAe,EAAE,OAAO;QACxBY,KAAK,EAAE,OAAO;QACdtB,MAAM,EAAE,MAAM;QACdZ,YAAY,EAAE,KAAK;QACnBW,MAAM,EAAE;MACV,CAAE;MAAAlB,QAAA,EACH;IAED;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtD,EAAA,CAvOQD,oBAAoB;AAAA4F,EAAA,GAApB5F,oBAAoB;AAyO7B,eAAeA,oBAAoB;;AAInignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}